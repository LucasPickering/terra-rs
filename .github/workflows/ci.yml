name: Build/Lint/Test

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  fmt:
    name: "Rustfmt"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Cache cargo files
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-fmt-${{ hashFiles('rust-toolchain') }}
      - name: Rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

  # This also covers linting because lints are handled through the compiler
  test:
    name: "Tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Cache cargo files
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test

  build-demo:
    name: "Build demo"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Caching
      - name: Cache cargo files
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            crates/wasm/pkg
          key: ${{ runner.os }}-cargo-wasm-${{ hashFiles('Cargo.lock') }}
      # Disabled because of a failure related to the terra-wasm package
      # - name: Cache npm files
      #   uses: actions/cache@v2
      #   with:
      #     path: demo/node_modules
      #     key: ${{ runner.os }}-demo-node-modules-${{ hashFiles('demo/package-lock.json') }}

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Install npm dependencies
        working-directory: demo
        run: npm install

      - name: Lint
        working-directory: demo
        run: npm run lint

      - name: Build
        working-directory: demo
        run: npm run build

      - name: Archive build
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v2
        with:
          name: demo-build
          path: demo/dist

  # Deploy only on master
  deploy-demo:
    name: "Deploy demo"
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs:
      - fmt
      - test
      - build-demo
    steps:
      - name: Download build artifact
        id: download
        uses: actions/download-artifact@v2
        with:
          name: demo-build

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@4.3.3
        with:
          branch: gh-pages
          folder: ${{ steps.download.outputs.download-path }}
          clean: true
