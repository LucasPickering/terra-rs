name: Lint and Test

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  fmt:
    name: "Rustfmt"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Cache cargo files
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-fmt-${{ hashFiles('rust-toolchain') }}
      - name: Rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

  # This also covers linting because lints are handled through the compiler
  test:
    name: "Tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Cache cargo files
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test

  build-demo:
    name: "Build TS demo"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Caching
      - name: Cache cargo files
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-wasm-${{ hashFiles('Cargo.lock') }}
      - name: Cache npm files
        uses: actions/cache@v2
        with:
          path: typescript/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('typescript/package-lock.json') }}

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Build
        run: |
          cd typescript
          npm ci
          npm run build

      - name: Archive build
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v2
        with:
          name: demo-build
          path: typescript/dist
